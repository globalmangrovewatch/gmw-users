name: Heroku review app
on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - develop
jobs:  
  create-review-app:
    if: |
      github.event_name == 'pull_request' && (
        github.event.action == 'opened' || 
        github.event.action == 'synchronize' || 
        github.event.action == 'reopened'
      )
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          ref: ${{github.event.pull_request.head.ref}}
          fetch-depth: 0
      - name: Run Tests
        run: |
          cd mrtt-ui/
          npm install 
          npm test -- --watchAll=false
      - name: Create review app
        run: |

          echo "Should be working on branch ${{github.event.pull_request.head.ref}}..."

          SOURCE_BRANCH_REF=$(git rev-parse --short HEAD)
          REVIEW_APP_NAME=$APP_NAME-$SOURCE_BRANCH_REF

          echo "SOURCE_BRANCH_REF=$SOURCE_BRANCH_REF"
          echo "REVIEW_APP_NAME=$REVIEW_APP_NAME"

          # create review app
          curl -X POST https://api.heroku.com/apps \
              -H "Accept: application/vnd.heroku+json; version=3" \
              -H "Authorization: Bearer $HEROKU_API_KEY" \
              -H "Content-Type: application/json" \
              -d "{\"name\":\"$REVIEW_APP_NAME\", \"region\":\"eu\"}"

          # set the buildpack to be used
          curl -X PUT https://api.heroku.com/apps/$REVIEW_APP_NAME/buildpack-installations \
              -H "Accept: application/vnd.heroku+json; version=3" \
              -H "Authorization: Bearer $HEROKU_API_KEY" \
              -H "Content-Type: application/json" \
              -d "{\"updates\":[{\"buildpack\":\"https://github.com/mars/create-react-app-buildpack\"}]}"

          # git push the subdirectory mrtt-ui
          git subtree push --prefix mrtt-ui \
              https://heroku:$HEROKU_API_KEY@git.heroku.com/$REVIEW_APP_NAME.git \
              main

          REVIEW_APP_URL="https://$REVIEW_APP_NAME.herokuapp.com/"

          curl -X POST $COMMENTS_URL \
              -H "Content-Type: application/json" \
              -H "Authorization: token $GITHUB_TOKEN" \
              --data "{ \"body\": \"A review app was created for this PR. See $REVIEW_APP_URL \" }"

        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          COMMENTS_URL: ${{ github.event.pull_request.comments_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APP_NAME: gmw-users-staging
  
  delete-review-app:
    if: |
      github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          ref: ${{github.event.pull_request.head.ref}}
          fetch-depth: 0
      - name: Delete all review app
        run: |

          # get the created review apps from the list of comments in the PR
          curl -Ss $COMMENTS_URL \
              -H "Content-Type: application/json" \
              -H "Authorization: token $GITHUB_TOKEN" \
              | jq -r '.[]|select(.body | startswith("A review app was created for this PR")).body' | \
          while read i; do
              HASH=`echo $i |  sed -e 's/.*'"$APP_NAME"'-\(.*\).herokuapp.com.*/\1/'`
              OLD_REVIEW_APP_NAME=$APP_NAME-$HASH
              echo "Deleting previous review app $OLD_REVIEW_APP_NAME"

              curl -X DELETE https://api.heroku.com/apps/$OLD_REVIEW_APP_NAME \
                  -H "Content-Type: application/json" \
                  -H "Accept: application/vnd.heroku+json; version=3" \
                  -H "Authorization: Bearer $HEROKU_API_KEY"

              REVIEW_APP_URL="https://$OLD_REVIEW_APP_NAME.herokuapp.com/"

              curl -X POST $COMMENTS_URL \
                  -H "Content-Type: application/json" \
                  -H "Authorization: token $GITHUB_TOKEN" \
                  --data "{ \"body\": \"The review app $REVIEW_APP_URL was deleted.\" }"
          done
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          COMMENTS_URL: ${{ github.event.pull_request.comments_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APP_NAME: gmw-users-staging
